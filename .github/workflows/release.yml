# Create a release whenever a new tag is pushed to the repo.
# You should use an annotated tag, like `git tag -a v1.2.3`
# and put the release notes into the commit message for the tag.
name: release

on:
  push:
    tags:
      - "*.*.*"
      - "*.*.*.rc*"

permissions: {}

jobs:
  release:
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      - name: 🛒 Checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4

      - name: ✨ Lint
        uses: trunk-io/trunk-action@65228585e2c6128315f0f2d5190e2eae7f5c32c6 # v1

      - name: 🐍 Set up Bazelisk
        uses: bazelbuild/setup-bazelisk@b39c379c82683a5f25d34f0d062761f62693e0b2 # v3

      - name: 💾 Mount Bazel cache
        uses: actions/cache@ab5e6d0c87105b4c9c2047343972218f562e4319 # v4
        with:
          path: ~/.cache/bazel
          key: bazel-cache-${{ hashFiles('.bazelrc', '.bazelversion', 'WORKSPACE', 'WORKSPACE.bazel', 'MODULE.bazel', '**/*.bzl' ) }}
          restore-keys: bazel-cache-

      - name: 🔨 Build
        run: make build

      - name: ✨ Verify working directory is clean
        run: ./scripts/verify-clean.bash

      - name: 🎯 Test
        run: make test

      - name: 📦 Package
        run: .github/workflows/release_prep.sh ${{ env.GITHUB_REF_NAME }} > release_notes.txt

      - name: 🚚 Release
        uses: softprops/action-gh-release@9d7c94cfd0a1f3ed45544c887983e9fa900f0564 # v2
        with:
          # Use GH feature to populate the changelog automatically
          generate_release_notes: true
          body_path: release_notes.txt
          files: rules_mypy-*.tar.gz
          fail_on_unmatched_files: true
